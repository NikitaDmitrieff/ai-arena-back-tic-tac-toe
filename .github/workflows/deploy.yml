name: CI-CD Tic-Tac-Toe Backend

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Compute image name (lowercase owner)
        run: |
          OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')
          echo "LOWERCASE_OWNER=${OWNER}" >> $GITHUB_ENV
          echo "IMAGE_NAME=ghcr.io/${OWNER}/arena-back-tic-tac-toe" >> $GITHUB_ENV

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Compute image name (lowercase owner)
        run: |
          OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')
          echo "LOWERCASE_OWNER=${OWNER}" >> $GITHUB_ENV
          echo "IMAGE_NAME=ghcr.io/${OWNER}/arena-back-tic-tac-toe" >> $GITHUB_ENV

      - name: Deploy to VM
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            docker pull ${{ env.IMAGE_NAME }}:latest
            docker stop arena-back-tic-tac-toe || true
            docker rm arena-back-tic-tac-toe || true
            docker run -d --restart=always \
              -p 8000:8000 \
              --name arena-back-tic-tac-toe \
              -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
              -e MISTRAL_API_KEY=${{ secrets.MISTRAL_API_KEY }} \
              -v /var/log/arena-tic-tac-toe:/app/logs \
              ${{ env.IMAGE_NAME }}:latest
